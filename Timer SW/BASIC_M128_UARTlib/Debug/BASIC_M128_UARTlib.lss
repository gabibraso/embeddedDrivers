
BASIC_M128_UARTlib.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00800100  00000c1e  00000cb2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c1e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000016d  00800140  00800140  00000cf2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000cf2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d24  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000264f  00000000  00000000  00000eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000af2  00000000  00000000  00003503  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013e6  00000000  00000000  00003ff5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000450  00000000  00000000  000053dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000db3  00000000  00000000  0000582c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001012  00000000  00000000  000065df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  000075f1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	b7 c1       	rjmp	.+878    	; 0x394 <__vector_9>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	39 c1       	rjmp	.+626    	; 0x2a0 <__vector_11>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	ca c2       	rjmp	.+1428   	; 0x5de <__vector_18>
  4a:	00 00       	nop
  4c:	46 c2       	rjmp	.+1164   	; 0x4da <__vector_19>
  4e:	00 00       	nop
  50:	84 c2       	rjmp	.+1288   	; 0x55a <__vector_20>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	eb c3       	rjmp	.+2006   	; 0x850 <__vector_30>
  7a:	00 00       	nop
  7c:	64 c3       	rjmp	.+1736   	; 0x746 <__vector_31>
  7e:	00 00       	nop
  80:	a5 c3       	rjmp	.+1866   	; 0x7cc <__vector_32>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e1       	ldi	r30, 0x1E	; 30
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 34       	cpi	r26, 0x40	; 64
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	22 e0       	ldi	r18, 0x02	; 2
  b4:	a0 e4       	ldi	r26, 0x40	; 64
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 3a       	cpi	r26, 0xAD	; 173
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	11 d0       	rcall	.+34     	; 0xe6 <main>
  c4:	aa c5       	rjmp	.+2900   	; 0xc1a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <led_1>:
bool timePassed = false;
volatile int Led1Counter=0, Led2Counter=0, Led3Counter=0;

void led_1()
{
	PORTB ^= (1<<PORTB0);
  c8:	98 b3       	in	r25, 0x18	; 24
  ca:	81 e0       	ldi	r24, 0x01	; 1
  cc:	89 27       	eor	r24, r25
  ce:	88 bb       	out	0x18, r24	; 24
  d0:	08 95       	ret

000000d2 <led_2>:
}

void led_2()
{
	PORTB ^= (1<<PORTB1);
  d2:	98 b3       	in	r25, 0x18	; 24
  d4:	82 e0       	ldi	r24, 0x02	; 2
  d6:	89 27       	eor	r24, r25
  d8:	88 bb       	out	0x18, r24	; 24
  da:	08 95       	ret

000000dc <led_3>:
}

void led_3()
{
	PORTB ^= (1<<PORTB2);
  dc:	98 b3       	in	r25, 0x18	; 24
  de:	84 e0       	ldi	r24, 0x04	; 4
  e0:	89 27       	eor	r24, r25
  e2:	88 bb       	out	0x18, r24	; 24
  e4:	08 95       	ret

000000e6 <main>:
}

int main(void)
{
mainCycleCount = 0;
  e6:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <mainCycleCount+0x1>
  ea:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <mainCycleCount>

//Initialize MCU
init_devices();
  ee:	10 d1       	rcall	.+544    	; 0x310 <init_devices>

//Print reset source.
if(MCUCSR & 0x01)
  f0:	04 b6       	in	r0, 0x34	; 52
  f2:	00 fe       	sbrs	r0, 0
  f4:	06 c0       	rjmp	.+12     	; 0x102 <main+0x1c>
    uart1_Transmite("\n\rPOWER ON!",11, true);
  f6:	41 e0       	ldi	r20, 0x01	; 1
  f8:	6b e0       	ldi	r22, 0x0B	; 11
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	83 e0       	ldi	r24, 0x03	; 3
  fe:	91 e0       	ldi	r25, 0x01	; 1
 100:	51 d4       	rcall	.+2210   	; 0x9a4 <uart1_Transmite>
WDR();
 102:	a8 95       	wdr
if(MCUCSR & 0x02)
 104:	04 b6       	in	r0, 0x34	; 52
 106:	01 fe       	sbrs	r0, 1
 108:	06 c0       	rjmp	.+12     	; 0x116 <main+0x30>
    uart1_Transmite("\n\rEXTERNAL!",11, true);
 10a:	41 e0       	ldi	r20, 0x01	; 1
 10c:	6b e0       	ldi	r22, 0x0B	; 11
 10e:	70 e0       	ldi	r23, 0x00	; 0
 110:	8f e0       	ldi	r24, 0x0F	; 15
 112:	91 e0       	ldi	r25, 0x01	; 1
 114:	47 d4       	rcall	.+2190   	; 0x9a4 <uart1_Transmite>
WDR();
 116:	a8 95       	wdr
if(MCUCSR & 0x04)
 118:	04 b6       	in	r0, 0x34	; 52
 11a:	02 fe       	sbrs	r0, 2
 11c:	06 c0       	rjmp	.+12     	; 0x12a <main+0x44>
    uart1_Transmite("\n\rBROUN OUT!",12, true);
 11e:	41 e0       	ldi	r20, 0x01	; 1
 120:	6c e0       	ldi	r22, 0x0C	; 12
 122:	70 e0       	ldi	r23, 0x00	; 0
 124:	8b e1       	ldi	r24, 0x1B	; 27
 126:	91 e0       	ldi	r25, 0x01	; 1
 128:	3d d4       	rcall	.+2170   	; 0x9a4 <uart1_Transmite>
WDR();
 12a:	a8 95       	wdr
if(MCUCSR & 0x08)
 12c:	04 b6       	in	r0, 0x34	; 52
 12e:	03 fe       	sbrs	r0, 3
 130:	06 c0       	rjmp	.+12     	; 0x13e <main+0x58>
    uart1_Transmite("\n\rWATCH DOG!",12, true);
 132:	41 e0       	ldi	r20, 0x01	; 1
 134:	6c e0       	ldi	r22, 0x0C	; 12
 136:	70 e0       	ldi	r23, 0x00	; 0
 138:	88 e2       	ldi	r24, 0x28	; 40
 13a:	91 e0       	ldi	r25, 0x01	; 1
 13c:	33 d4       	rcall	.+2150   	; 0x9a4 <uart1_Transmite>
WDR();
 13e:	a8 95       	wdr
if(MCUCSR & 0x10)
 140:	04 b6       	in	r0, 0x34	; 52
 142:	04 fe       	sbrs	r0, 4
 144:	06 c0       	rjmp	.+12     	; 0x152 <main+0x6c>
    uart1_Transmite("\n\rJTAG!",7, true);
 146:	41 e0       	ldi	r20, 0x01	; 1
 148:	67 e0       	ldi	r22, 0x07	; 7
 14a:	70 e0       	ldi	r23, 0x00	; 0
 14c:	85 e3       	ldi	r24, 0x35	; 53
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	29 d4       	rcall	.+2130   	; 0x9a4 <uart1_Transmite>
WDR();
uart1_Transmite("\n\r",2, true);
 152:	a8 95       	wdr
 154:	41 e0       	ldi	r20, 0x01	; 1
 156:	62 e0       	ldi	r22, 0x02	; 2
 158:	70 e0       	ldi	r23, 0x00	; 0
 15a:	8d e3       	ldi	r24, 0x3D	; 61
 15c:	91 e0       	ldi	r25, 0x01	; 1
 15e:	22 d4       	rcall	.+2116   	; 0x9a4 <uart1_Transmite>
MCUCSR = 0;
 160:	14 be       	out	0x34, r1	; 52

uart1_bReceptioneaza = false;
 162:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <uart1_bReceptioneaza>

// Init. ports LEDs
	DDRB  = 0xFF;
 166:	8f ef       	ldi	r24, 0xFF	; 255
 168:	87 bb       	out	0x17, r24	; 23
	PORTB = 0x00;
 16a:	18 ba       	out	0x18, r1	; 24

// Init. timer
	TCCR1A = (1<<WGM11) | (0<<WGM10);									   //fast pwm
 16c:	82 e0       	ldi	r24, 0x02	; 2
 16e:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1<<WGM13) | (1<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);  //prescalar 256
 170:	8c e1       	ldi	r24, 0x1C	; 28
 172:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1<<TICIE1); 
 174:	87 b7       	in	r24, 0x37	; 55
 176:	80 62       	ori	r24, 0x20	; 32
 178:	87 bf       	out	0x37, r24	; 55
	ICR1 = 288; //10ms
 17a:	80 e2       	ldi	r24, 0x20	; 32
 17c:	91 e0       	ldi	r25, 0x01	; 1
 17e:	97 bd       	out	0x27, r25	; 39
 180:	86 bd       	out	0x26, r24	; 38
	sei();
 182:	78 94       	sei

do
{
    //Reset watchdog to prevent a reset
    wdt_reset(); 
 184:	a8 95       	wdr
    
    //If there is no pending UART operation start listening
	if(!uart1_bReceptioneaza && !uart1_bTransmite && !uart1_bStareNeprocesata)
 186:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <uart1_bReceptioneaza>
 18a:	81 11       	cpse	r24, r1
 18c:	10 c0       	rjmp	.+32     	; 0x1ae <main+0xc8>
 18e:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <uart1_bTransmite>
 192:	81 11       	cpse	r24, r1
 194:	0c c0       	rjmp	.+24     	; 0x1ae <main+0xc8>
 196:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <uart1_bStareNeprocesata>
 19a:	81 11       	cpse	r24, r1
 19c:	08 c0       	rjmp	.+16     	; 0x1ae <main+0xc8>
       //is received (to prevent buffer over flow)
       //Received data is stored in the snTelegramaRx input buffer.
       //The input buffer is reset (index set to 0) before Rx is initiated
       //Once the terminal char is received, receiving further characters
       //is blocked. Any other chars will be discarded
       uart1_ReceptieTermTX(snTelegramaRx, RX_TERM, L_BUF_RX, true, true);	   	  	          
 19e:	01 e0       	ldi	r16, 0x01	; 1
 1a0:	21 e0       	ldi	r18, 0x01	; 1
 1a2:	40 e8       	ldi	r20, 0x80	; 128
 1a4:	50 e0       	ldi	r21, 0x00	; 0
 1a6:	6d e0       	ldi	r22, 0x0D	; 13
 1a8:	81 e5       	ldi	r24, 0x51	; 81
 1aa:	91 e0       	ldi	r25, 0x01	; 1

    
    //Periodically evaluate the status of a message Rx
    //Checking the Rx complete condition in a non-ISR function is meant to keep 
    //the ISR as short as possible.
    uart1_ReceptieOK();
 1ac:	f3 d4       	rcall	.+2534   	; 0xb94 <uart1_ReceptieTermTX>
 1ae:	fd d3       	rcall	.+2042   	; 0x9aa <uart1_ReceptieOK>
    wdt_reset(); 
 1b0:	a8 95       	wdr

    //Check if the UART unprocessed flag has been set
    if(uart1_bStareNeprocesata)
 1b2:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <uart1_bStareNeprocesata>
 1b6:	88 23       	and	r24, r24
 1b8:	09 f4       	brne	.+2      	; 0x1bc <main+0xd6>
 1ba:	3d c0       	rjmp	.+122    	; 0x236 <main+0x150>
	{   
	    //An TxOK, RxOK, Timeout of BufferLimit condition has been detected
        //We don't test for timeout as we have configured the UART in slave mode

        if(uart1_bRXBufferLimit)
 1bc:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <uart1_bRXBufferLimit>
 1c0:	88 23       	and	r24, r24
 1c2:	69 f0       	breq	.+26     	; 0x1de <main+0xf8>
        {
            //ToDo: Do some error processing for buffer limit.            
            //Reset the uart flags
            uart1_bReceptioneaza = false;
 1c4:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <uart1_bReceptioneaza>
            uart1_bRXBufferLimit = false;
 1c8:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <uart1_bRXBufferLimit>
            uart1_nContorRX = 0;
 1cc:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <uart1_nContorRX+0x1>
 1d0:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <uart1_nContorRX>
            uart1_bStareNeprocesata = false;
 1d4:	10 92 f7 01 	sts	0x01F7, r1	; 0x8001f7 <uart1_bStareNeprocesata>
			uart1_bRxOK = false;
 1d8:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <uart1_bRxOK>
            wdt_reset(); 
 1dc:	a8 95       	wdr
        }
	   
       if(uart1_bRxOK)
 1de:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <uart1_bRxOK>
 1e2:	88 23       	and	r24, r24
        {
            //Copy the received data from the Rx buffer into the Tx buffer
            //and send the echo.
            memcpy(snTelegramaTx, snTelegramaRx, uart1_nLungimeRX);
 1e4:	31 f1       	breq	.+76     	; 0x232 <main+0x14c>
 1e6:	40 91 4d 01 	lds	r20, 0x014D	; 0x80014d <uart1_nLungimeRX>
 1ea:	50 91 4e 01 	lds	r21, 0x014E	; 0x80014e <uart1_nLungimeRX+0x1>
 1ee:	61 e5       	ldi	r22, 0x51	; 81
 1f0:	71 e0       	ldi	r23, 0x01	; 1
 1f2:	82 e2       	ldi	r24, 0x22	; 34
 1f4:	92 e0       	ldi	r25, 0x02	; 2
 1f6:	08 d5       	rcall	.+2576   	; 0xc08 <memcpy>
            //add new line and carriage return
            memcpy(snTelegramaTx + uart1_nLungimeRX, sNewLine, 3);
 1f8:	e0 91 4d 01 	lds	r30, 0x014D	; 0x80014d <uart1_nLungimeRX>
 1fc:	f0 91 4e 01 	lds	r31, 0x014E	; 0x80014e <uart1_nLungimeRX+0x1>
 200:	ee 5d       	subi	r30, 0xDE	; 222
 202:	fd 4f       	sbci	r31, 0xFD	; 253
 204:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 208:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 20c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 210:	80 83       	st	Z, r24
 212:	91 83       	std	Z+1, r25	; 0x01
 214:	a2 83       	std	Z+2, r26	; 0x02
            
            //Commence the transmission
            //If a transmission is already ongoing block here until that is finished
            //and then set the current transmission.
            //Note that the transmission function is otherwise not blocking.
			uart1_TransmiteExt(snTelegramaTx , strlen(snTelegramaTx), true, false);						
 216:	e2 e2       	ldi	r30, 0x22	; 34
 218:	f2 e0       	ldi	r31, 0x02	; 2
 21a:	01 90       	ld	r0, Z+
 21c:	00 20       	and	r0, r0
 21e:	e9 f7       	brne	.-6      	; 0x21a <main+0x134>
 220:	31 97       	sbiw	r30, 0x01	; 1
 222:	bf 01       	movw	r22, r30
 224:	62 52       	subi	r22, 0x22	; 34
 226:	72 40       	sbci	r23, 0x02	; 2
 228:	20 e0       	ldi	r18, 0x00	; 0
 22a:	41 e0       	ldi	r20, 0x01	; 1
 22c:	82 e2       	ldi	r24, 0x22	; 34
 22e:	92 e0       	ldi	r25, 0x02	; 2
 230:	6c d3       	rcall	.+1752   	; 0x90a <uart1_TransmiteExt>
        }
        
        //reset the flag to prevent re-processing of the same conditions 
        uart1_bStareNeprocesata = false; 
 232:	10 92 f7 01 	sts	0x01F7, r1	; 0x8001f7 <uart1_bStareNeprocesata>
	}
	
	if (Led1Counter == 1) //10ms
 236:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <Led1Counter>
 23a:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <Led1Counter+0x1>
 23e:	01 97       	sbiw	r24, 0x01	; 1
 240:	b9 f4       	brne	.+46     	; 0x270 <main+0x18a>
	{
		Led2Counter++;
 242:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <Led2Counter>
 246:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <Led2Counter+0x1>
 24a:	01 96       	adiw	r24, 0x01	; 1
 24c:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <Led2Counter+0x1>
 250:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <Led2Counter>
		Led3Counter++;
 254:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <__data_end>
 258:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__data_end+0x1>
 25c:	01 96       	adiw	r24, 0x01	; 1
 25e:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <__data_end+0x1>
 262:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__data_end>
		led_1();
		Led1Counter = 0;
 266:	30 df       	rcall	.-416    	; 0xc8 <led_1>
 268:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <Led1Counter+0x1>
 26c:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <Led1Counter>
		
	}
	
	if (Led2Counter == 5) //50ms
 270:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <Led2Counter>
 274:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <Led2Counter+0x1>
 278:	05 97       	sbiw	r24, 0x05	; 5
	{
		led_2();
 27a:	29 f4       	brne	.+10     	; 0x286 <main+0x1a0>
		Led2Counter = 0;
 27c:	2a df       	rcall	.-428    	; 0xd2 <led_2>
 27e:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <Led2Counter+0x1>
 282:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <Led2Counter>
		
	}
	
	if (Led3Counter == 10) //100ms
 286:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <__data_end>
 28a:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__data_end+0x1>
 28e:	0a 97       	sbiw	r24, 0x0a	; 10
 290:	09 f0       	breq	.+2      	; 0x294 <main+0x1ae>
	{
		led_3();
 292:	78 cf       	rjmp	.-272    	; 0x184 <main+0x9e>
 294:	23 df       	rcall	.-442    	; 0xdc <led_3>
		Led3Counter = 0;
 296:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <__data_end+0x1>
 29a:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__data_end>
 29e:	72 cf       	rjmp	.-284    	; 0x184 <main+0x9e>

000002a0 <__vector_11>:




ISR(TIMER1_CAPT_vect) 
{
 2a0:	1f 92       	push	r1
 2a2:	0f 92       	push	r0
 2a4:	0f b6       	in	r0, 0x3f	; 63
 2a6:	0f 92       	push	r0
 2a8:	11 24       	eor	r1, r1
 2aa:	8f 93       	push	r24
 2ac:	9f 93       	push	r25
	Led1Counter++;
 2ae:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <Led1Counter>
 2b2:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <Led1Counter+0x1>
 2b6:	01 96       	adiw	r24, 0x01	; 1
 2b8:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <Led1Counter+0x1>
 2bc:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <Led1Counter>
	//Led2Counter++;
	//Led3Counter++;
}
 2c0:	9f 91       	pop	r25
 2c2:	8f 91       	pop	r24
 2c4:	0f 90       	pop	r0
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	0f 90       	pop	r0
 2ca:	1f 90       	pop	r1
 2cc:	18 95       	reti

000002ce <watchdog_init>:
 2ce:	a8 95       	wdr
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	81 bd       	out	0x21, r24	; 33
 2d4:	08 95       	ret

000002d6 <port_init>:
 2d6:	8f ef       	ldi	r24, 0xFF	; 255
 2d8:	8a bb       	out	0x1a, r24	; 26
 2da:	8b bb       	out	0x1b, r24	; 27
 2dc:	88 bb       	out	0x18, r24	; 24
 2de:	87 bb       	out	0x17, r24	; 23
 2e0:	9f e7       	ldi	r25, 0x7F	; 127
 2e2:	95 bb       	out	0x15, r25	; 21
 2e4:	94 bb       	out	0x14, r25	; 20
 2e6:	12 ba       	out	0x12, r1	; 18
 2e8:	81 bb       	out	0x11, r24	; 17
 2ea:	83 b9       	out	0x03, r24	; 3
 2ec:	82 b9       	out	0x02, r24	; 2
 2ee:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 2f2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 2f6:	e5 e6       	ldi	r30, 0x65	; 101
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	80 83       	st	Z, r24
 2fc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
 300:	f0 93 02 02 	sts	0x0202, r31	; 0x800202 <ledPort+0x1>
 304:	e0 93 01 02 	sts	0x0201, r30	; 0x800201 <ledPort>
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <ledPinMask>
 30e:	08 95       	ret

00000310 <init_devices>:
 310:	8f 92       	push	r8
 312:	9f 92       	push	r9
 314:	af 92       	push	r10
 316:	cf 92       	push	r12
 318:	ef 92       	push	r14
 31a:	0f 93       	push	r16
 31c:	d8 df       	rcall	.-80     	; 0x2ce <watchdog_init>
 31e:	f8 94       	cli
 320:	1c be       	out	0x3c, r1	; 60
 322:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 326:	d7 df       	rcall	.-82     	; 0x2d6 <port_init>
 328:	a8 95       	wdr
 32a:	1f 92       	push	r1
 32c:	1f 92       	push	r1
 32e:	81 2c       	mov	r8, r1
 330:	91 2c       	mov	r9, r1
 332:	0f 2e       	mov	r0, r31
 334:	f8 ef       	ldi	r31, 0xF8	; 248
 336:	af 2e       	mov	r10, r31
 338:	f0 2d       	mov	r31, r0
 33a:	c1 2c       	mov	r12, r1
 33c:	0f 2e       	mov	r0, r31
 33e:	f7 e0       	ldi	r31, 0x07	; 7
 340:	ef 2e       	mov	r14, r31
 342:	f0 2d       	mov	r31, r0
 344:	06 e0       	ldi	r16, 0x06	; 6
 346:	20 e0       	ldi	r18, 0x00	; 0
 348:	40 e0       	ldi	r20, 0x00	; 0
 34a:	60 e0       	ldi	r22, 0x00	; 0
 34c:	80 e0       	ldi	r24, 0x00	; 0
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	a2 d1       	rcall	.+836    	; 0x696 <uart1_init>
 352:	78 94       	sei
 354:	15 be       	out	0x35, r1	; 53
 356:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 35a:	1a be       	out	0x3a, r1	; 58
 35c:	19 be       	out	0x39, r1	; 57
 35e:	80 e4       	ldi	r24, 0x40	; 64
 360:	87 bf       	out	0x37, r24	; 55
 362:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <__TEXT_REGION_LENGTH__+0x7e007d>
 366:	78 94       	sei
 368:	0f 90       	pop	r0
 36a:	0f 90       	pop	r0
 36c:	0f 91       	pop	r16
 36e:	ef 90       	pop	r14
 370:	cf 90       	pop	r12
 372:	af 90       	pop	r10
 374:	9f 90       	pop	r9
 376:	8f 90       	pop	r8
 378:	08 95       	ret

0000037a <timer2_init>:
 37a:	15 bc       	out	0x25, r1	; 37
 37c:	14 bc       	out	0x24, r1	; 36
 37e:	87 e4       	ldi	r24, 0x47	; 71
 380:	83 bd       	out	0x23, r24	; 35
 382:	8d e0       	ldi	r24, 0x0D	; 13
 384:	85 bd       	out	0x25, r24	; 37
 386:	87 b7       	in	r24, 0x37	; 55
 388:	80 68       	ori	r24, 0x80	; 128
 38a:	87 bf       	out	0x37, r24	; 55
 38c:	87 b7       	in	r24, 0x37	; 55
 38e:	8e 7f       	andi	r24, 0xFE	; 254
 390:	87 bf       	out	0x37, r24	; 55
 392:	08 95       	ret

00000394 <__vector_9>:
 394:	1f 92       	push	r1
 396:	0f 92       	push	r0
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	0f 92       	push	r0
 39c:	11 24       	eor	r1, r1
 39e:	2f 93       	push	r18
 3a0:	3f 93       	push	r19
 3a2:	8f 93       	push	r24
 3a4:	9f 93       	push	r25
 3a6:	14 bc       	out	0x24, r1	; 36
 3a8:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <uart0_bTimerCounting>
 3ac:	88 23       	and	r24, r24
 3ae:	19 f1       	breq	.+70     	; 0x3f6 <__vector_9+0x62>
 3b0:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <uart0_nValoareTimeout>
 3b4:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <uart0_nValoareTimeout+0x1>
 3b8:	89 2b       	or	r24, r25
 3ba:	e9 f0       	breq	.+58     	; 0x3f6 <__vector_9+0x62>
 3bc:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <uart0_nContorTimeout>
 3c0:	90 91 de 01 	lds	r25, 0x01DE	; 0x8001de <uart0_nContorTimeout+0x1>
 3c4:	01 96       	adiw	r24, 0x01	; 1
 3c6:	90 93 de 01 	sts	0x01DE, r25	; 0x8001de <uart0_nContorTimeout+0x1>
 3ca:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <uart0_nContorTimeout>
 3ce:	20 91 dd 01 	lds	r18, 0x01DD	; 0x8001dd <uart0_nContorTimeout>
 3d2:	30 91 de 01 	lds	r19, 0x01DE	; 0x8001de <uart0_nContorTimeout+0x1>
 3d6:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <uart0_nValoareTimeout>
 3da:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <uart0_nValoareTimeout+0x1>
 3de:	28 17       	cp	r18, r24
 3e0:	39 07       	cpc	r19, r25
 3e2:	48 f0       	brcs	.+18     	; 0x3f6 <__vector_9+0x62>
 3e4:	81 e0       	ldi	r24, 0x01	; 1
 3e6:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <uart0_bTimeout>
 3ea:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <uart0_bReceptioneaza>
 3ee:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <uart0_bStareNeprocesata>
 3f2:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <uart0_bTimerCounting>
 3f6:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <uart0_bTimerCarCounting>
 3fa:	88 23       	and	r24, r24
 3fc:	e9 f0       	breq	.+58     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 3fe:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <uart0_nContorTimeoutCar>
 402:	90 91 d6 01 	lds	r25, 0x01D6	; 0x8001d6 <uart0_nContorTimeoutCar+0x1>
 406:	01 96       	adiw	r24, 0x01	; 1
 408:	90 93 d6 01 	sts	0x01D6, r25	; 0x8001d6 <uart0_nContorTimeoutCar+0x1>
 40c:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <uart0_nContorTimeoutCar>
 410:	20 91 d5 01 	lds	r18, 0x01D5	; 0x8001d5 <uart0_nContorTimeoutCar>
 414:	30 91 d6 01 	lds	r19, 0x01D6	; 0x8001d6 <uart0_nContorTimeoutCar+0x1>
 418:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <uart0_nValoareTimeoutCar>
 41c:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <uart0_nValoareTimeoutCar+0x1>
 420:	28 17       	cp	r18, r24
 422:	39 07       	cpc	r19, r25
 424:	48 f0       	brcs	.+18     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <uart0_bTimeoutCar>
 42c:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <uart0_bReceptioneaza>
 430:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <uart0_bStareNeprocesata>
 434:	10 92 fe 01 	sts	0x01FE, r1	; 0x8001fe <uart0_bTimerCarCounting>
 438:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <uart1_bTimerCounting>
 43c:	88 23       	and	r24, r24
 43e:	19 f1       	breq	.+70     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 440:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <uart1_nValoareTimeout>
 444:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <uart1_nValoareTimeout+0x1>
 448:	89 2b       	or	r24, r25
 44a:	e9 f0       	breq	.+58     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 44c:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <uart1_nContorTimeout>
 450:	90 91 0e 02 	lds	r25, 0x020E	; 0x80020e <uart1_nContorTimeout+0x1>
 454:	01 96       	adiw	r24, 0x01	; 1
 456:	90 93 0e 02 	sts	0x020E, r25	; 0x80020e <uart1_nContorTimeout+0x1>
 45a:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <uart1_nContorTimeout>
 45e:	20 91 0d 02 	lds	r18, 0x020D	; 0x80020d <uart1_nContorTimeout>
 462:	30 91 0e 02 	lds	r19, 0x020E	; 0x80020e <uart1_nContorTimeout+0x1>
 466:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <uart1_nValoareTimeout>
 46a:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <uart1_nValoareTimeout+0x1>
 46e:	28 17       	cp	r18, r24
 470:	39 07       	cpc	r19, r25
 472:	48 f0       	brcs	.+18     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	80 93 a9 02 	sts	0x02A9, r24	; 0x8002a9 <uart1_bTimeout>
 47a:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <uart1_bReceptioneaza>
 47e:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <uart1_bStareNeprocesata>
 482:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <uart1_bTimerCounting>
 486:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <uart1_bTimerCarCounting>
 48a:	88 23       	and	r24, r24
 48c:	e9 f0       	breq	.+58     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 48e:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <uart1_nContorTimeoutCar>
 492:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <uart1_nContorTimeoutCar+0x1>
 496:	01 96       	adiw	r24, 0x01	; 1
 498:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <uart1_nContorTimeoutCar+0x1>
 49c:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <uart1_nContorTimeoutCar>
 4a0:	20 91 e0 01 	lds	r18, 0x01E0	; 0x8001e0 <uart1_nContorTimeoutCar>
 4a4:	30 91 e1 01 	lds	r19, 0x01E1	; 0x8001e1 <uart1_nContorTimeoutCar+0x1>
 4a8:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <uart1_nValoareTimeoutCar>
 4ac:	90 91 a3 02 	lds	r25, 0x02A3	; 0x8002a3 <uart1_nValoareTimeoutCar+0x1>
 4b0:	28 17       	cp	r18, r24
 4b2:	39 07       	cpc	r19, r25
 4b4:	48 f0       	brcs	.+18     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <uart1_bTimeoutCar>
 4bc:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <uart1_bReceptioneaza>
 4c0:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <uart1_bStareNeprocesata>
 4c4:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <uart1_bTimerCarCounting>
 4c8:	9f 91       	pop	r25
 4ca:	8f 91       	pop	r24
 4cc:	3f 91       	pop	r19
 4ce:	2f 91       	pop	r18
 4d0:	0f 90       	pop	r0
 4d2:	0f be       	out	0x3f, r0	; 63
 4d4:	0f 90       	pop	r0
 4d6:	1f 90       	pop	r1
 4d8:	18 95       	reti

000004da <__vector_19>:
 4da:	1f 92       	push	r1
 4dc:	0f 92       	push	r0
 4de:	0f b6       	in	r0, 0x3f	; 63
 4e0:	0f 92       	push	r0
 4e2:	11 24       	eor	r1, r1
 4e4:	0b b6       	in	r0, 0x3b	; 59
 4e6:	0f 92       	push	r0
 4e8:	2f 93       	push	r18
 4ea:	3f 93       	push	r19
 4ec:	8f 93       	push	r24
 4ee:	9f 93       	push	r25
 4f0:	ef 93       	push	r30
 4f2:	ff 93       	push	r31
 4f4:	a8 95       	wdr
 4f6:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <uart0_nContorTX>
 4fa:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <uart0_nContorTX+0x1>
 4fe:	01 96       	adiw	r24, 0x01	; 1
 500:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <uart0_nContorTX+0x1>
 504:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <uart0_nContorTX>
 508:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <uart0_nContorTX>
 50c:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <uart0_nContorTX+0x1>
 510:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <uart0_nLungimeTX>
 514:	90 91 f6 01 	lds	r25, 0x01F6	; 0x8001f6 <uart0_nLungimeTX+0x1>
 518:	28 17       	cp	r18, r24
 51a:	39 07       	cpc	r19, r25
 51c:	29 f4       	brne	.+10     	; 0x528 <__vector_19+0x4e>
 51e:	9a b1       	in	r25, 0x0a	; 10
 520:	80 e2       	ldi	r24, 0x20	; 32
 522:	89 27       	eor	r24, r25
 524:	8a b9       	out	0x0a, r24	; 10
 526:	0c c0       	rjmp	.+24     	; 0x540 <__vector_19+0x66>
 528:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <uart0_nContorTX>
 52c:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <uart0_nContorTX+0x1>
 530:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <uart0_sTransmis>
 534:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <uart0_sTransmis+0x1>
 538:	e8 0f       	add	r30, r24
 53a:	f9 1f       	adc	r31, r25
 53c:	80 81       	ld	r24, Z
 53e:	8c b9       	out	0x0c, r24	; 12
 540:	ff 91       	pop	r31
 542:	ef 91       	pop	r30
 544:	9f 91       	pop	r25
 546:	8f 91       	pop	r24
 548:	3f 91       	pop	r19
 54a:	2f 91       	pop	r18
 54c:	0f 90       	pop	r0
 54e:	0b be       	out	0x3b, r0	; 59
 550:	0f 90       	pop	r0
 552:	0f be       	out	0x3f, r0	; 63
 554:	0f 90       	pop	r0
 556:	1f 90       	pop	r1
 558:	18 95       	reti

0000055a <__vector_20>:
 55a:	1f 92       	push	r1
 55c:	0f 92       	push	r0
 55e:	0f b6       	in	r0, 0x3f	; 63
 560:	0f 92       	push	r0
 562:	11 24       	eor	r1, r1
 564:	0b b6       	in	r0, 0x3b	; 59
 566:	0f 92       	push	r0
 568:	2f 93       	push	r18
 56a:	3f 93       	push	r19
 56c:	8f 93       	push	r24
 56e:	9f 93       	push	r25
 570:	ef 93       	push	r30
 572:	ff 93       	push	r31
 574:	a8 95       	wdr
 576:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <uart0_nContorTX>
 57a:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <uart0_nContorTX+0x1>
 57e:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <uart0_nLungimeTX>
 582:	90 91 f6 01 	lds	r25, 0x01F6	; 0x8001f6 <uart0_nLungimeTX+0x1>
 586:	28 17       	cp	r18, r24
 588:	39 07       	cpc	r19, r25
 58a:	e1 f4       	brne	.+56     	; 0x5c4 <__vector_20+0x6a>
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <uart0_bTxOK>
 592:	10 92 d3 01 	sts	0x01D3, r1	; 0x8001d3 <uart0_bTransmite>
 596:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <uart0_bRS485>
 59a:	88 23       	and	r24, r24
 59c:	99 f0       	breq	.+38     	; 0x5c4 <__vector_20+0x6a>
 59e:	e0 91 d9 01 	lds	r30, 0x01D9	; 0x8001d9 <uart0_Port485Dir>
 5a2:	f0 91 da 01 	lds	r31, 0x01DA	; 0x8001da <uart0_Port485Dir+0x1>
 5a6:	90 81       	ld	r25, Z
 5a8:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <uart0_Port485DirMask>
 5ac:	80 95       	com	r24
 5ae:	89 23       	and	r24, r25
 5b0:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <uart0_bRS485Inversat>
 5b4:	99 23       	and	r25, r25
 5b6:	19 f0       	breq	.+6      	; 0x5be <__vector_20+0x64>
 5b8:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <uart0_Port485DirMask>
 5bc:	01 c0       	rjmp	.+2      	; 0x5c0 <__vector_20+0x66>
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	89 2b       	or	r24, r25
 5c2:	80 83       	st	Z, r24
 5c4:	ff 91       	pop	r31
 5c6:	ef 91       	pop	r30
 5c8:	9f 91       	pop	r25
 5ca:	8f 91       	pop	r24
 5cc:	3f 91       	pop	r19
 5ce:	2f 91       	pop	r18
 5d0:	0f 90       	pop	r0
 5d2:	0b be       	out	0x3b, r0	; 59
 5d4:	0f 90       	pop	r0
 5d6:	0f be       	out	0x3f, r0	; 63
 5d8:	0f 90       	pop	r0
 5da:	1f 90       	pop	r1
 5dc:	18 95       	reti

000005de <__vector_18>:
 5de:	1f 92       	push	r1
 5e0:	0f 92       	push	r0
 5e2:	0f b6       	in	r0, 0x3f	; 63
 5e4:	0f 92       	push	r0
 5e6:	11 24       	eor	r1, r1
 5e8:	0b b6       	in	r0, 0x3b	; 59
 5ea:	0f 92       	push	r0
 5ec:	2f 93       	push	r18
 5ee:	3f 93       	push	r19
 5f0:	8f 93       	push	r24
 5f2:	9f 93       	push	r25
 5f4:	ef 93       	push	r30
 5f6:	ff 93       	push	r31
 5f8:	81 e0       	ldi	r24, 0x01	; 1
 5fa:	80 93 fe 01 	sts	0x01FE, r24	; 0x8001fe <uart0_bTimerCarCounting>
 5fe:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <uart0_nContorTimeoutCar+0x1>
 602:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <uart0_nContorTimeoutCar>
 606:	a8 95       	wdr
 608:	8c b1       	in	r24, 0x0c	; 12
 60a:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <uart0_sVid>
 60e:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <uart0_bReceptioneaza>
 612:	88 23       	and	r24, r24
 614:	99 f1       	breq	.+102    	; 0x67c <__vector_18+0x9e>
 616:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <uart0_nContorRX>
 61a:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <uart0_nContorRX+0x1>
 61e:	e0 91 db 01 	lds	r30, 0x01DB	; 0x8001db <uart0_sReceptionat>
 622:	f0 91 dc 01 	lds	r31, 0x01DC	; 0x8001dc <uart0_sReceptionat+0x1>
 626:	e8 0f       	add	r30, r24
 628:	f9 1f       	adc	r31, r25
 62a:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <uart0_sVid>
 62e:	80 83       	st	Z, r24
 630:	20 91 e6 01 	lds	r18, 0x01E6	; 0x8001e6 <uart0_nContorRX>
 634:	30 91 e7 01 	lds	r19, 0x01E7	; 0x8001e7 <uart0_nContorRX+0x1>
 638:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <uart0_nLungMaxBuferRX>
 63c:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <uart0_nLungMaxBuferRX+0x1>
 640:	28 17       	cp	r18, r24
 642:	39 07       	cpc	r19, r25
 644:	50 f4       	brcc	.+20     	; 0x65a <__vector_18+0x7c>
 646:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <uart0_nContorRX>
 64a:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <uart0_nContorRX+0x1>
 64e:	01 96       	adiw	r24, 0x01	; 1
 650:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <uart0_nContorRX+0x1>
 654:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <uart0_nContorRX>
 658:	11 c0       	rjmp	.+34     	; 0x67c <__vector_18+0x9e>
 65a:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <uart0_nLungMaxBuferRX>
 65e:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <uart0_nLungMaxBuferRX+0x1>
 662:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <uart0_nContorRX+0x1>
 666:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <uart0_nContorRX>
 66a:	81 e0       	ldi	r24, 0x01	; 1
 66c:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <uart0_bRXBufferLimit>
 670:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <uart0_bReceptioneaza>
 674:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <uart0_bStareNeprocesata>
 678:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <uart0_bTimerCounting>
 67c:	ff 91       	pop	r31
 67e:	ef 91       	pop	r30
 680:	9f 91       	pop	r25
 682:	8f 91       	pop	r24
 684:	3f 91       	pop	r19
 686:	2f 91       	pop	r18
 688:	0f 90       	pop	r0
 68a:	0b be       	out	0x3b, r0	; 59
 68c:	0f 90       	pop	r0
 68e:	0f be       	out	0x3f, r0	; 63
 690:	0f 90       	pop	r0
 692:	1f 90       	pop	r1
 694:	18 95       	reti

00000696 <uart1_init>:
 696:	8f 92       	push	r8
 698:	9f 92       	push	r9
 69a:	af 92       	push	r10
 69c:	cf 92       	push	r12
 69e:	ef 92       	push	r14
 6a0:	0f 93       	push	r16
 6a2:	cf 93       	push	r28
 6a4:	df 93       	push	r29
 6a6:	cd b7       	in	r28, 0x3d	; 61
 6a8:	de b7       	in	r29, 0x3e	; 62
 6aa:	e4 ed       	ldi	r30, 0xD4	; 212
 6ac:	f1 e0       	ldi	r31, 0x01	; 1
 6ae:	f0 93 0c 02 	sts	0x020C, r31	; 0x80020c <uart1_sReceptionat+0x1>
 6b2:	e0 93 0b 02 	sts	0x020B, r30	; 0x80020b <uart1_sReceptionat>
 6b6:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <uart1_nContorRX+0x1>
 6ba:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <uart1_nContorRX>
 6be:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <uart1_nLungimeRX+0x1>
 6c2:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <uart1_nLungimeRX>
 6c6:	e1 e0       	ldi	r30, 0x01	; 1
 6c8:	f0 e0       	ldi	r31, 0x00	; 0
 6ca:	f0 93 e3 01 	sts	0x01E3, r31	; 0x8001e3 <uart1_nLungMaxBuferRX+0x1>
 6ce:	e0 93 e2 01 	sts	0x01E2, r30	; 0x8001e2 <uart1_nLungMaxBuferRX>
 6d2:	ea e9       	ldi	r30, 0x9A	; 154
 6d4:	f0 e0       	ldi	r31, 0x00	; 0
 6d6:	10 82       	st	Z, r1
 6d8:	20 93 9b 00 	sts	0x009B, r18	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
 6dc:	00 93 9d 00 	sts	0x009D, r16	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
 6e0:	e0 92 99 00 	sts	0x0099, r14	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 6e4:	c0 92 98 00 	sts	0x0098, r12	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 6e8:	a0 82       	st	Z, r10
 6ea:	90 92 f4 01 	sts	0x01F4, r9	; 0x8001f4 <uart1_nValoareTimeout+0x1>
 6ee:	80 92 f3 01 	sts	0x01F3, r8	; 0x8001f3 <uart1_nValoareTimeout>
 6f2:	2b 85       	ldd	r18, Y+11	; 0x0b
 6f4:	3c 85       	ldd	r19, Y+12	; 0x0c
 6f6:	30 93 a3 02 	sts	0x02A3, r19	; 0x8002a3 <uart1_nValoareTimeoutCar+0x1>
 6fa:	20 93 a2 02 	sts	0x02A2, r18	; 0x8002a2 <uart1_nValoareTimeoutCar>
 6fe:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <uart1_bTransmite>
 702:	30 81       	ld	r19, Z
 704:	20 e2       	ldi	r18, 0x20	; 32
 706:	23 27       	eor	r18, r19
 708:	20 83       	st	Z, r18
 70a:	00 97       	sbiw	r24, 0x00	; 0
 70c:	81 f0       	breq	.+32     	; 0x72e <uart1_init+0x98>
 70e:	90 93 a6 02 	sts	0x02A6, r25	; 0x8002a6 <uart1_Port485Dir+0x1>
 712:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <uart1_Port485Dir>
 716:	fc 01       	movw	r30, r24
 718:	82 91       	ld	r24, -Z
 71a:	86 2b       	or	r24, r22
 71c:	80 83       	st	Z, r24
 71e:	60 93 18 02 	sts	0x0218, r22	; 0x800218 <uart1_Port485DirMask>
 722:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <uart1_bRS485Inversat>
 726:	81 e0       	ldi	r24, 0x01	; 1
 728:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <uart1_bRS485>
 72c:	02 c0       	rjmp	.+4      	; 0x732 <uart1_init+0x9c>
 72e:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <uart1_bRS485>
 732:	23 de       	rcall	.-954    	; 0x37a <timer2_init>
 734:	df 91       	pop	r29
 736:	cf 91       	pop	r28
 738:	0f 91       	pop	r16
 73a:	ef 90       	pop	r14
 73c:	cf 90       	pop	r12
 73e:	af 90       	pop	r10
 740:	9f 90       	pop	r9
 742:	8f 90       	pop	r8
 744:	08 95       	ret

00000746 <__vector_31>:
 746:	1f 92       	push	r1
 748:	0f 92       	push	r0
 74a:	0f b6       	in	r0, 0x3f	; 63
 74c:	0f 92       	push	r0
 74e:	11 24       	eor	r1, r1
 750:	0b b6       	in	r0, 0x3b	; 59
 752:	0f 92       	push	r0
 754:	2f 93       	push	r18
 756:	3f 93       	push	r19
 758:	8f 93       	push	r24
 75a:	9f 93       	push	r25
 75c:	ef 93       	push	r30
 75e:	ff 93       	push	r31
 760:	a8 95       	wdr
 762:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <uart1_nContorTX>
 766:	90 91 ab 02 	lds	r25, 0x02AB	; 0x8002ab <uart1_nContorTX+0x1>
 76a:	01 96       	adiw	r24, 0x01	; 1
 76c:	90 93 ab 02 	sts	0x02AB, r25	; 0x8002ab <uart1_nContorTX+0x1>
 770:	80 93 aa 02 	sts	0x02AA, r24	; 0x8002aa <uart1_nContorTX>
 774:	20 91 aa 02 	lds	r18, 0x02AA	; 0x8002aa <uart1_nContorTX>
 778:	30 91 ab 02 	lds	r19, 0x02AB	; 0x8002ab <uart1_nContorTX+0x1>
 77c:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <uart1_nLungimeTX>
 780:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <uart1_nLungimeTX+0x1>
 784:	28 17       	cp	r18, r24
 786:	39 07       	cpc	r19, r25
 788:	39 f4       	brne	.+14     	; 0x798 <__vector_31+0x52>
 78a:	ea e9       	ldi	r30, 0x9A	; 154
 78c:	f0 e0       	ldi	r31, 0x00	; 0
 78e:	90 81       	ld	r25, Z
 790:	80 e2       	ldi	r24, 0x20	; 32
 792:	89 27       	eor	r24, r25
 794:	80 83       	st	Z, r24
 796:	0d c0       	rjmp	.+26     	; 0x7b2 <__vector_31+0x6c>
 798:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <uart1_nContorTX>
 79c:	90 91 ab 02 	lds	r25, 0x02AB	; 0x8002ab <uart1_nContorTX+0x1>
 7a0:	e0 91 f1 01 	lds	r30, 0x01F1	; 0x8001f1 <uart1_sTransmis>
 7a4:	f0 91 f2 01 	lds	r31, 0x01F2	; 0x8001f2 <uart1_sTransmis+0x1>
 7a8:	e8 0f       	add	r30, r24
 7aa:	f9 1f       	adc	r31, r25
 7ac:	80 81       	ld	r24, Z
 7ae:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 7b2:	ff 91       	pop	r31
 7b4:	ef 91       	pop	r30
 7b6:	9f 91       	pop	r25
 7b8:	8f 91       	pop	r24
 7ba:	3f 91       	pop	r19
 7bc:	2f 91       	pop	r18
 7be:	0f 90       	pop	r0
 7c0:	0b be       	out	0x3b, r0	; 59
 7c2:	0f 90       	pop	r0
 7c4:	0f be       	out	0x3f, r0	; 63
 7c6:	0f 90       	pop	r0
 7c8:	1f 90       	pop	r1
 7ca:	18 95       	reti

000007cc <__vector_32>:
 7cc:	1f 92       	push	r1
 7ce:	0f 92       	push	r0
 7d0:	0f b6       	in	r0, 0x3f	; 63
 7d2:	0f 92       	push	r0
 7d4:	11 24       	eor	r1, r1
 7d6:	0b b6       	in	r0, 0x3b	; 59
 7d8:	0f 92       	push	r0
 7da:	2f 93       	push	r18
 7dc:	3f 93       	push	r19
 7de:	8f 93       	push	r24
 7e0:	9f 93       	push	r25
 7e2:	ef 93       	push	r30
 7e4:	ff 93       	push	r31
 7e6:	a8 95       	wdr
 7e8:	20 91 aa 02 	lds	r18, 0x02AA	; 0x8002aa <uart1_nContorTX>
 7ec:	30 91 ab 02 	lds	r19, 0x02AB	; 0x8002ab <uart1_nContorTX+0x1>
 7f0:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <uart1_nLungimeTX>
 7f4:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <uart1_nLungimeTX+0x1>
 7f8:	28 17       	cp	r18, r24
 7fa:	39 07       	cpc	r19, r25
 7fc:	e1 f4       	brne	.+56     	; 0x836 <__vector_32+0x6a>
 7fe:	81 e0       	ldi	r24, 0x01	; 1
 800:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <uart1_bTxOK>
 804:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <uart1_bTransmite>
 808:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <uart1_bRS485>
 80c:	88 23       	and	r24, r24
 80e:	99 f0       	breq	.+38     	; 0x836 <__vector_32+0x6a>
 810:	e0 91 a5 02 	lds	r30, 0x02A5	; 0x8002a5 <uart1_Port485Dir>
 814:	f0 91 a6 02 	lds	r31, 0x02A6	; 0x8002a6 <uart1_Port485Dir+0x1>
 818:	90 81       	ld	r25, Z
 81a:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <uart1_Port485DirMask>
 81e:	80 95       	com	r24
 820:	89 23       	and	r24, r25
 822:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <uart1_bRS485Inversat>
 826:	99 23       	and	r25, r25
 828:	19 f0       	breq	.+6      	; 0x830 <__vector_32+0x64>
 82a:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <uart1_Port485DirMask>
 82e:	01 c0       	rjmp	.+2      	; 0x832 <__vector_32+0x66>
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	89 2b       	or	r24, r25
 834:	80 83       	st	Z, r24
 836:	ff 91       	pop	r31
 838:	ef 91       	pop	r30
 83a:	9f 91       	pop	r25
 83c:	8f 91       	pop	r24
 83e:	3f 91       	pop	r19
 840:	2f 91       	pop	r18
 842:	0f 90       	pop	r0
 844:	0b be       	out	0x3b, r0	; 59
 846:	0f 90       	pop	r0
 848:	0f be       	out	0x3f, r0	; 63
 84a:	0f 90       	pop	r0
 84c:	1f 90       	pop	r1
 84e:	18 95       	reti

00000850 <__vector_30>:
 850:	1f 92       	push	r1
 852:	0f 92       	push	r0
 854:	0f b6       	in	r0, 0x3f	; 63
 856:	0f 92       	push	r0
 858:	11 24       	eor	r1, r1
 85a:	0b b6       	in	r0, 0x3b	; 59
 85c:	0f 92       	push	r0
 85e:	2f 93       	push	r18
 860:	3f 93       	push	r19
 862:	8f 93       	push	r24
 864:	9f 93       	push	r25
 866:	ef 93       	push	r30
 868:	ff 93       	push	r31
 86a:	81 e0       	ldi	r24, 0x01	; 1
 86c:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <uart1_bTimerCarCounting>
 870:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <uart1_nContorTimeoutCar+0x1>
 874:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <uart1_nContorTimeoutCar>
 878:	a8 95       	wdr
 87a:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 87e:	80 93 d4 01 	sts	0x01D4, r24	; 0x8001d4 <uart1_sVid>
 882:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <uart1_bReceptioneaza>
 886:	88 23       	and	r24, r24
 888:	99 f1       	breq	.+102    	; 0x8f0 <__vector_30+0xa0>
 88a:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <uart1_nContorRX>
 88e:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <uart1_nContorRX+0x1>
 892:	e0 91 0b 02 	lds	r30, 0x020B	; 0x80020b <uart1_sReceptionat>
 896:	f0 91 0c 02 	lds	r31, 0x020C	; 0x80020c <uart1_sReceptionat+0x1>
 89a:	e8 0f       	add	r30, r24
 89c:	f9 1f       	adc	r31, r25
 89e:	80 91 d4 01 	lds	r24, 0x01D4	; 0x8001d4 <uart1_sVid>
 8a2:	80 83       	st	Z, r24
 8a4:	20 91 f8 01 	lds	r18, 0x01F8	; 0x8001f8 <uart1_nContorRX>
 8a8:	30 91 f9 01 	lds	r19, 0x01F9	; 0x8001f9 <uart1_nContorRX+0x1>
 8ac:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <uart1_nLungMaxBuferRX>
 8b0:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <uart1_nLungMaxBuferRX+0x1>
 8b4:	28 17       	cp	r18, r24
 8b6:	39 07       	cpc	r19, r25
 8b8:	50 f4       	brcc	.+20     	; 0x8ce <__vector_30+0x7e>
 8ba:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <uart1_nContorRX>
 8be:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <uart1_nContorRX+0x1>
 8c2:	01 96       	adiw	r24, 0x01	; 1
 8c4:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <uart1_nContorRX+0x1>
 8c8:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <uart1_nContorRX>
 8cc:	11 c0       	rjmp	.+34     	; 0x8f0 <__vector_30+0xa0>
 8ce:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <uart1_nLungMaxBuferRX>
 8d2:	90 91 e3 01 	lds	r25, 0x01E3	; 0x8001e3 <uart1_nLungMaxBuferRX+0x1>
 8d6:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <uart1_nContorRX+0x1>
 8da:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <uart1_nContorRX>
 8de:	81 e0       	ldi	r24, 0x01	; 1
 8e0:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <uart1_bRXBufferLimit>
 8e4:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <uart1_bReceptioneaza>
 8e8:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <uart1_bStareNeprocesata>
 8ec:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <uart1_bTimerCounting>
 8f0:	ff 91       	pop	r31
 8f2:	ef 91       	pop	r30
 8f4:	9f 91       	pop	r25
 8f6:	8f 91       	pop	r24
 8f8:	3f 91       	pop	r19
 8fa:	2f 91       	pop	r18
 8fc:	0f 90       	pop	r0
 8fe:	0b be       	out	0x3b, r0	; 59
 900:	0f 90       	pop	r0
 902:	0f be       	out	0x3f, r0	; 63
 904:	0f 90       	pop	r0
 906:	1f 90       	pop	r1
 908:	18 95       	reti

0000090a <uart1_TransmiteExt>:
 90a:	a8 95       	wdr
 90c:	61 15       	cp	r22, r1
 90e:	71 05       	cpc	r23, r1
 910:	09 f4       	brne	.+2      	; 0x914 <uart1_TransmiteExt+0xa>
 912:	47 c0       	rjmp	.+142    	; 0x9a2 <uart1_TransmiteExt+0x98>
 914:	44 23       	and	r20, r20
 916:	49 f0       	breq	.+18     	; 0x92a <uart1_TransmiteExt+0x20>
 918:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <uart1_bTransmite>
 91c:	31 30       	cpi	r19, 0x01	; 1
 91e:	29 f4       	brne	.+10     	; 0x92a <uart1_TransmiteExt+0x20>
 920:	a8 95       	wdr
 922:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <uart1_bTransmite>
 926:	31 11       	cpse	r19, r1
 928:	fb cf       	rjmp	.-10     	; 0x920 <uart1_TransmiteExt+0x16>
 92a:	31 e0       	ldi	r19, 0x01	; 1
 92c:	30 93 07 02 	sts	0x0207, r19	; 0x800207 <uart1_bTransmite>
 930:	90 93 f2 01 	sts	0x01F2, r25	; 0x8001f2 <uart1_sTransmis+0x1>
 934:	80 93 f1 01 	sts	0x01F1, r24	; 0x8001f1 <uart1_sTransmis>
 938:	10 92 ab 02 	sts	0x02AB, r1	; 0x8002ab <uart1_nContorTX+0x1>
 93c:	10 92 aa 02 	sts	0x02AA, r1	; 0x8002aa <uart1_nContorTX>
 940:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <uart1_bTxOK>
 944:	70 93 eb 01 	sts	0x01EB, r23	; 0x8001eb <uart1_nLungimeTX+0x1>
 948:	60 93 ea 01 	sts	0x01EA, r22	; 0x8001ea <uart1_nLungimeTX>
 94c:	30 91 a4 02 	lds	r19, 0x02A4	; 0x8002a4 <uart1_bRS485>
 950:	33 23       	and	r19, r19
 952:	99 f0       	breq	.+38     	; 0x97a <uart1_TransmiteExt+0x70>
 954:	e0 91 a5 02 	lds	r30, 0x02A5	; 0x8002a5 <uart1_Port485Dir>
 958:	f0 91 a6 02 	lds	r31, 0x02A6	; 0x8002a6 <uart1_Port485Dir+0x1>
 95c:	40 81       	ld	r20, Z
 95e:	30 91 18 02 	lds	r19, 0x0218	; 0x800218 <uart1_Port485DirMask>
 962:	30 95       	com	r19
 964:	34 23       	and	r19, r20
 966:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <uart1_bRS485Inversat>
 96a:	41 11       	cpse	r20, r1
 96c:	03 c0       	rjmp	.+6      	; 0x974 <uart1_TransmiteExt+0x6a>
 96e:	40 91 18 02 	lds	r20, 0x0218	; 0x800218 <uart1_Port485DirMask>
 972:	01 c0       	rjmp	.+2      	; 0x976 <uart1_TransmiteExt+0x6c>
 974:	40 e0       	ldi	r20, 0x00	; 0
 976:	34 2b       	or	r19, r20
 978:	30 83       	st	Z, r19
 97a:	fc 01       	movw	r30, r24
 97c:	80 81       	ld	r24, Z
 97e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 982:	ea e9       	ldi	r30, 0x9A	; 154
 984:	f0 e0       	ldi	r31, 0x00	; 0
 986:	80 81       	ld	r24, Z
 988:	80 62       	ori	r24, 0x20	; 32
 98a:	80 83       	st	Z, r24
 98c:	22 23       	and	r18, r18
 98e:	49 f0       	breq	.+18     	; 0x9a2 <uart1_TransmiteExt+0x98>
 990:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <uart1_bTransmite>
 994:	81 30       	cpi	r24, 0x01	; 1
 996:	29 f4       	brne	.+10     	; 0x9a2 <uart1_TransmiteExt+0x98>
 998:	a8 95       	wdr
 99a:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <uart1_bTransmite>
 99e:	81 11       	cpse	r24, r1
 9a0:	fb cf       	rjmp	.-10     	; 0x998 <uart1_TransmiteExt+0x8e>
 9a2:	08 95       	ret

000009a4 <uart1_Transmite>:
 9a4:	20 e0       	ldi	r18, 0x00	; 0
 9a6:	b1 cf       	rjmp	.-158    	; 0x90a <uart1_TransmiteExt>
 9a8:	08 95       	ret

000009aa <uart1_ReceptieOK>:
 9aa:	df 92       	push	r13
 9ac:	ef 92       	push	r14
 9ae:	ff 92       	push	r15
 9b0:	0f 93       	push	r16
 9b2:	1f 93       	push	r17
 9b4:	cf 93       	push	r28
 9b6:	df 93       	push	r29
 9b8:	a8 95       	wdr
 9ba:	e0 90 f8 01 	lds	r14, 0x01F8	; 0x8001f8 <uart1_nContorRX>
 9be:	f0 90 f9 01 	lds	r15, 0x01F9	; 0x8001f9 <uart1_nContorRX+0x1>
 9c2:	40 91 20 02 	lds	r20, 0x0220	; 0x800220 <uart1_nIndexUltimTestat>
 9c6:	50 91 21 02 	lds	r21, 0x0221	; 0x800221 <uart1_nIndexUltimTestat+0x1>
 9ca:	4e 15       	cp	r20, r14
 9cc:	5f 05       	cpc	r21, r15
 9ce:	08 f0       	brcs	.+2      	; 0x9d2 <uart1_ReceptieOK+0x28>
 9d0:	cf c0       	rjmp	.+414    	; 0xb70 <uart1_ReceptieOK+0x1c6>
 9d2:	60 91 0b 02 	lds	r22, 0x020B	; 0x80020b <uart1_sReceptionat>
 9d6:	70 91 0c 02 	lds	r23, 0x020C	; 0x80020c <uart1_sReceptionat+0x1>
 9da:	a0 91 ee 01 	lds	r26, 0x01EE	; 0x8001ee <uart1_sMultiTermRX>
 9de:	b0 91 ef 01 	lds	r27, 0x01EF	; 0x8001ef <uart1_sMultiTermRX+0x1>
 9e2:	00 91 fb 01 	lds	r16, 0x01FB	; 0x8001fb <uart1_sMultiLungimeRX>
 9e6:	10 91 fc 01 	lds	r17, 0x01FC	; 0x8001fc <uart1_sMultiLungimeRX+0x1>
 9ea:	dd 24       	eor	r13, r13
 9ec:	d3 94       	inc	r13
 9ee:	a8 95       	wdr
 9f0:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <uart1_nCriteriiTestRX>
 9f4:	88 23       	and	r24, r24
 9f6:	09 f4       	brne	.+2      	; 0x9fa <uart1_ReceptieOK+0x50>
 9f8:	69 c0       	rjmp	.+210    	; 0xacc <uart1_ReceptieOK+0x122>
 9fa:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <uart1_nCriteriiTestRX>
 9fe:	88 23       	and	r24, r24
 a00:	09 f4       	brne	.+2      	; 0xa04 <uart1_ReceptieOK+0x5a>
 a02:	b0 c0       	rjmp	.+352    	; 0xb64 <uart1_ReceptieOK+0x1ba>
 a04:	80 e0       	ldi	r24, 0x00	; 0
 a06:	a8 95       	wdr
 a08:	fb 01       	movw	r30, r22
 a0a:	e4 0f       	add	r30, r20
 a0c:	f5 1f       	adc	r31, r21
 a0e:	e0 81       	ld	r30, Z
 a10:	28 2f       	mov	r18, r24
 a12:	30 e0       	ldi	r19, 0x00	; 0
 a14:	ed 01       	movw	r28, r26
 a16:	c2 0f       	add	r28, r18
 a18:	d3 1f       	adc	r29, r19
 a1a:	98 81       	ld	r25, Y
 a1c:	e9 13       	cpse	r30, r25
 a1e:	4f c0       	rjmp	.+158    	; 0xabe <uart1_ReceptieOK+0x114>
 a20:	22 0f       	add	r18, r18
 a22:	33 1f       	adc	r19, r19
 a24:	f8 01       	movw	r30, r16
 a26:	e2 0f       	add	r30, r18
 a28:	f3 1f       	adc	r31, r19
 a2a:	20 81       	ld	r18, Z
 a2c:	31 81       	ldd	r19, Z+1	; 0x01
 a2e:	23 2b       	or	r18, r19
 a30:	09 f5       	brne	.+66     	; 0xa74 <uart1_ReceptieOK+0xca>
 a32:	4f 5f       	subi	r20, 0xFF	; 255
 a34:	5f 4f       	sbci	r21, 0xFF	; 255
 a36:	50 93 4e 01 	sts	0x014E, r21	; 0x80014e <uart1_nLungimeRX+0x1>
 a3a:	40 93 4d 01 	sts	0x014D, r20	; 0x80014d <uart1_nLungimeRX>
 a3e:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <uart1_bTimerCounting>
 a42:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <uart1_bBlocheazaReceptiaLaFinal>
 a46:	81 30       	cpi	r24, 0x01	; 1
 a48:	11 f4       	brne	.+4      	; 0xa4e <uart1_ReceptieOK+0xa4>
 a4a:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <uart1_bTimerCarCounting>
 a4e:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <uart1_nCriteriiTestRX>
 a52:	d0 92 04 02 	sts	0x0204, r13	; 0x800204 <uart1_bRxOK>
 a56:	d0 92 f7 01 	sts	0x01F7, r13	; 0x8001f7 <uart1_bStareNeprocesata>
 a5a:	20 91 ac 02 	lds	r18, 0x02AC	; 0x8002ac <uart1_bBlocheazaReceptiaLaFinal>
 a5e:	9d 2d       	mov	r25, r13
 a60:	21 11       	cpse	r18, r1
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <uart1_bReceptioneaza>
 a68:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <uart1_nContorTimeout+0x1>
 a6c:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <uart1_nContorTimeout>
 a70:	a7 01       	movw	r20, r14
 a72:	25 c0       	rjmp	.+74     	; 0xabe <uart1_ReceptieOK+0x114>
 a74:	20 81       	ld	r18, Z
 a76:	31 81       	ldd	r19, Z+1	; 0x01
 a78:	e2 16       	cp	r14, r18
 a7a:	f3 06       	cpc	r15, r19
 a7c:	01 f5       	brne	.+64     	; 0xabe <uart1_ReceptieOK+0x114>
 a7e:	4f 5f       	subi	r20, 0xFF	; 255
 a80:	5f 4f       	sbci	r21, 0xFF	; 255
 a82:	50 93 4e 01 	sts	0x014E, r21	; 0x80014e <uart1_nLungimeRX+0x1>
 a86:	40 93 4d 01 	sts	0x014D, r20	; 0x80014d <uart1_nLungimeRX>
 a8a:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <uart1_bTimerCounting>
 a8e:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <uart1_bBlocheazaReceptiaLaFinal>
 a92:	81 30       	cpi	r24, 0x01	; 1
 a94:	11 f4       	brne	.+4      	; 0xa9a <uart1_ReceptieOK+0xf0>
 a96:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <uart1_bTimerCarCounting>
 a9a:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <uart1_nCriteriiTestRX>
 a9e:	d0 92 04 02 	sts	0x0204, r13	; 0x800204 <uart1_bRxOK>
 aa2:	d0 92 f7 01 	sts	0x01F7, r13	; 0x8001f7 <uart1_bStareNeprocesata>
 aa6:	20 91 ac 02 	lds	r18, 0x02AC	; 0x8002ac <uart1_bBlocheazaReceptiaLaFinal>
 aaa:	9d 2d       	mov	r25, r13
 aac:	21 11       	cpse	r18, r1
 aae:	90 e0       	ldi	r25, 0x00	; 0
 ab0:	90 93 1c 02 	sts	0x021C, r25	; 0x80021c <uart1_bReceptioneaza>
 ab4:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <uart1_nContorTimeout+0x1>
 ab8:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <uart1_nContorTimeout>
 abc:	a7 01       	movw	r20, r14
 abe:	8f 5f       	subi	r24, 0xFF	; 255
 ac0:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <uart1_nCriteriiTestRX>
 ac4:	89 17       	cp	r24, r25
 ac6:	08 f4       	brcc	.+2      	; 0xaca <uart1_ReceptieOK+0x120>
 ac8:	9e cf       	rjmp	.-196    	; 0xa06 <uart1_ReceptieOK+0x5c>
 aca:	4c c0       	rjmp	.+152    	; 0xb64 <uart1_ReceptieOK+0x1ba>
 acc:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <uart1_bRecCuTermRX>
 ad0:	88 23       	and	r24, r24
 ad2:	41 f1       	breq	.+80     	; 0xb24 <uart1_ReceptieOK+0x17a>
 ad4:	fb 01       	movw	r30, r22
 ad6:	e4 0f       	add	r30, r20
 ad8:	f5 1f       	adc	r31, r21
 ada:	90 81       	ld	r25, Z
 adc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <uart1_cTermRX>
 ae0:	98 13       	cpse	r25, r24
 ae2:	40 c0       	rjmp	.+128    	; 0xb64 <uart1_ReceptieOK+0x1ba>
 ae4:	ca 01       	movw	r24, r20
 ae6:	01 96       	adiw	r24, 0x01	; 1
 ae8:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <uart1_nLungimeRX+0x1>
 aec:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <uart1_nLungimeRX>
 af0:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <uart1_bTimerCounting>
 af4:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <uart1_bBlocheazaReceptiaLaFinal>
 af8:	81 30       	cpi	r24, 0x01	; 1
 afa:	11 f4       	brne	.+4      	; 0xb00 <uart1_ReceptieOK+0x156>
 afc:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <uart1_bTimerCarCounting>
 b00:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <uart1_nCriteriiTestRX>
 b04:	d0 92 04 02 	sts	0x0204, r13	; 0x800204 <uart1_bRxOK>
 b08:	d0 92 f7 01 	sts	0x01F7, r13	; 0x8001f7 <uart1_bStareNeprocesata>
 b0c:	90 91 ac 02 	lds	r25, 0x02AC	; 0x8002ac <uart1_bBlocheazaReceptiaLaFinal>
 b10:	8d 2d       	mov	r24, r13
 b12:	91 11       	cpse	r25, r1
 b14:	80 e0       	ldi	r24, 0x00	; 0
 b16:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <uart1_bReceptioneaza>
 b1a:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <uart1_nContorTimeout+0x1>
 b1e:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <uart1_nContorTimeout>
 b22:	20 c0       	rjmp	.+64     	; 0xb64 <uart1_ReceptieOK+0x1ba>
 b24:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <uart1_nLungimeRX>
 b28:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <uart1_nLungimeRX+0x1>
 b2c:	e8 16       	cp	r14, r24
 b2e:	f9 06       	cpc	r15, r25
 b30:	c8 f0       	brcs	.+50     	; 0xb64 <uart1_ReceptieOK+0x1ba>
 b32:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <uart1_bTimerCounting>
 b36:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <uart1_bBlocheazaReceptiaLaFinal>
 b3a:	81 30       	cpi	r24, 0x01	; 1
 b3c:	11 f4       	brne	.+4      	; 0xb42 <uart1_ReceptieOK+0x198>
 b3e:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <uart1_bTimerCarCounting>
 b42:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <uart1_nCriteriiTestRX>
 b46:	d0 92 04 02 	sts	0x0204, r13	; 0x800204 <uart1_bRxOK>
 b4a:	d0 92 f7 01 	sts	0x01F7, r13	; 0x8001f7 <uart1_bStareNeprocesata>
 b4e:	90 91 ac 02 	lds	r25, 0x02AC	; 0x8002ac <uart1_bBlocheazaReceptiaLaFinal>
 b52:	8d 2d       	mov	r24, r13
 b54:	91 11       	cpse	r25, r1
 b56:	80 e0       	ldi	r24, 0x00	; 0
 b58:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <uart1_bReceptioneaza>
 b5c:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <uart1_nContorTimeout+0x1>
 b60:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <uart1_nContorTimeout>
 b64:	4f 5f       	subi	r20, 0xFF	; 255
 b66:	5f 4f       	sbci	r21, 0xFF	; 255
 b68:	4e 15       	cp	r20, r14
 b6a:	5f 05       	cpc	r21, r15
 b6c:	08 f4       	brcc	.+2      	; 0xb70 <uart1_ReceptieOK+0x1c6>
 b6e:	3f cf       	rjmp	.-386    	; 0x9ee <uart1_ReceptieOK+0x44>
 b70:	f0 92 21 02 	sts	0x0221, r15	; 0x800221 <uart1_nIndexUltimTestat+0x1>
 b74:	e0 92 20 02 	sts	0x0220, r14	; 0x800220 <uart1_nIndexUltimTestat>
 b78:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <uart1_bRxOK>
 b7c:	81 e0       	ldi	r24, 0x01	; 1
 b7e:	91 11       	cpse	r25, r1
 b80:	01 c0       	rjmp	.+2      	; 0xb84 <uart1_ReceptieOK+0x1da>
 b82:	80 e0       	ldi	r24, 0x00	; 0
 b84:	df 91       	pop	r29
 b86:	cf 91       	pop	r28
 b88:	1f 91       	pop	r17
 b8a:	0f 91       	pop	r16
 b8c:	ff 90       	pop	r15
 b8e:	ef 90       	pop	r14
 b90:	df 90       	pop	r13
 b92:	08 95       	ret

00000b94 <uart1_ReceptieTermTX>:
 b94:	0f 93       	push	r16
 b96:	a8 95       	wdr
 b98:	31 e0       	ldi	r19, 0x01	; 1
 b9a:	30 93 17 02 	sts	0x0217, r19	; 0x800217 <uart1_bSetareParametri>
 b9e:	90 93 0c 02 	sts	0x020C, r25	; 0x80020c <uart1_sReceptionat+0x1>
 ba2:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <uart1_sReceptionat>
 ba6:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <uart1_nLungimeRX+0x1>
 baa:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <uart1_nLungimeRX>
 bae:	60 93 00 02 	sts	0x0200, r22	; 0x800200 <uart1_cTermRX>
 bb2:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <uart1_nCriteriiTestRX>
 bb6:	22 23       	and	r18, r18
 bb8:	21 f0       	breq	.+8      	; 0xbc2 <uart1_ReceptieTermTX+0x2e>
 bba:	10 92 f9 01 	sts	0x01F9, r1	; 0x8001f9 <uart1_nContorRX+0x1>
 bbe:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <uart1_nContorRX>
 bc2:	50 93 e3 01 	sts	0x01E3, r21	; 0x8001e3 <uart1_nLungMaxBuferRX+0x1>
 bc6:	40 93 e2 01 	sts	0x01E2, r20	; 0x8001e2 <uart1_nLungMaxBuferRX>
 bca:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <uart1_bRxOK>
 bce:	10 92 f7 01 	sts	0x01F7, r1	; 0x8001f7 <uart1_bStareNeprocesata>
 bd2:	81 e0       	ldi	r24, 0x01	; 1
 bd4:	80 93 f0 01 	sts	0x01F0, r24	; 0x8001f0 <uart1_bRecCuTermRX>
 bd8:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <uart1_bRXBufferLimit>
 bdc:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <uart1_nIndexUltimTestat+0x1>
 be0:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <uart1_nIndexUltimTestat>
 be4:	10 92 fa 01 	sts	0x01FA, r1	; 0x8001fa <uart1_bTimerCounting>
 be8:	10 92 a9 02 	sts	0x02A9, r1	; 0x8002a9 <uart1_bTimeout>
 bec:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <uart1_nContorTimeout+0x1>
 bf0:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <uart1_nContorTimeout>
 bf4:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <uart1_bTimerCounting>
 bf8:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <uart1_bReceptioneaza>
 bfc:	00 93 ac 02 	sts	0x02AC, r16	; 0x8002ac <uart1_bBlocheazaReceptiaLaFinal>
 c00:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <uart1_bSetareParametri>
 c04:	0f 91       	pop	r16
 c06:	08 95       	ret

00000c08 <memcpy>:
 c08:	fb 01       	movw	r30, r22
 c0a:	dc 01       	movw	r26, r24
 c0c:	02 c0       	rjmp	.+4      	; 0xc12 <memcpy+0xa>
 c0e:	01 90       	ld	r0, Z+
 c10:	0d 92       	st	X+, r0
 c12:	41 50       	subi	r20, 0x01	; 1
 c14:	50 40       	sbci	r21, 0x00	; 0
 c16:	d8 f7       	brcc	.-10     	; 0xc0e <memcpy+0x6>
 c18:	08 95       	ret

00000c1a <_exit>:
 c1a:	f8 94       	cli

00000c1c <__stop_program>:
 c1c:	ff cf       	rjmp	.-2      	; 0xc1c <__stop_program>
